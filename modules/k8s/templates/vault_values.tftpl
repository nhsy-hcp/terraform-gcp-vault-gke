global:
  enabled: true
  tlsDisable: false

injector:
  enabled: false

server:
  image:
    repository: "${vault_repository}"
    tag: "${vault_version_tag}"

%{if vault_license_secret_name != "" }
  enterpriseLicense:
    secretName: "${vault_license_secret_name}"
    secretKey: "${vault_license_secret_key}"
%{ endif }

  ha:
    enabled: true
    replicas: 3
    apiAddr: "https://$(VAULT_K8S_POD_NAME).vault-internal:8200"
    raft:
      enabled: true
      setNodeId: true
      config: |        
        listener "tcp" {
          tls_disable   = false
          tls_cert_file = "/vault/userconfig/tls/tls.crt"
          tls_key_file  = "/vault/userconfig/tls/tls.key"
          tls_require_and_verify_client_cert = false
          tls_disable_client_certs           = true
          address         = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        
        storage "raft" {
          path = "/vault/data"

          retry_join {
            auto_join             = "provider=k8s namespace=vault label_selector=\"component=server,app.kubernetes.io/instance=vault\""
            auto_join_scheme      = "https"
            leader_ca_cert_file   = "/vault/userconfig/tls-ca/ca.crt"
            leader_tls_servername = "HOSTNAME.vault-internal"        
          }
        }

        service_registration "kubernetes" {}

        api_addr     = "https://HOSTNAME.vault-internal:8200"
        cluster_addr = "https://HOSTNAME.vault-internal:8201"        
        ui           = true

    readinessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    livenessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true"
      initialDelaySeconds: 60

  service:
    annotations:
      cloud.google.com/app-protocols: '{"https": "HTTPS"}'
      cloud.google.com/backend-config: '{"default": "${vault_backend_config}"}'
      cloud.google.com/neg: '{"ingress": true}'

  ingress:
    enabled: true

    hosts:
      - host: ${fqdn}
        paths: [/]

    annotations:
      kubernetes.io/ingress.allow-http: "false"
      kubernetes.io/ingress.class: "gce"
      kubernetes.io/ingress.global-static-ip-name: "${lb_ip_address_name}"
      networking.gke.io/managed-certificates: "${managed_certificate_name}"

  extraVolumes:
    - type: secret
      name: tls
    - type: secret
      name: tls-ca

  extraEnvironmentVars:
    VAULT_CAPATH: /vault/userconfig/tls-ca/ca.crt
    VAULT_SKIP_VERIFY: true
